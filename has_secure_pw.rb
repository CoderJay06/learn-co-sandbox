gem 'bcrypt'


class User < ActiveRecord::Base 
  def password=(new_password)
    salt = BCrypt::Engine::generate_salt
    hashed = BCrypt""Engine::hash_secret(new_password, salt)
    self.password_digest = salt + hashed 
  end 
  
  # authenticate(password: string) -> User?
  def authenticate(password)
    # Salts generated by generate_salt are always 29 chars long.
    salt = password_digest[0..28]
    hashed = BCrypt::Engine::hash_secret(password, salt)
    return nil unless (salt + hashed) == self.password_digest
  end 
  
  def dumb_hash(input)
    input.bytes.reduce(:+)
  end 
  
end 

class SessionsController < ApplicationController 
  
  def create 
    user = User.find_by(username: params[:username])
    authenticated = user.try(:authenticate, params[:password])
    return head(:forbidden) unless authenticated
    @user = user 
    session[:user_id] = @user.id 
  end 
end 